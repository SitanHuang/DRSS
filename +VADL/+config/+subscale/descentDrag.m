function sys = descentDrag(sys)

uc = DRSS.util.unitConv;

rocketDynamics = sys.configParams.rocketDynamics;
rocketDynamics.recalcTransientParameters(sys);

if isfield(sys.configParams, 'useLegacyDrag') && sys.configParams.useLegacyDrag
  CDr_drogue = (1.42 * 1.41 * rocketDynamics.aerodynamicProfile.A_fin + 0.56 * (rocketDynamics.A_side)) / rocketDynamics.A;

  sys.configParams.rocketMainDescentDrag = DRSS.core.dynamics.SimpleDrag() ...
    .setArea(rocketDynamics.A) ...
    .setCD(CDr_drogue) ...
    .setArea_side(rocketDynamics.A_side) ...
    .setCD_side(1.42 * 1.41) ...
    .setEnabledOnInit(false);
else
  Ar = rocketDynamics.A * 0.75 + rocketDynamics.A_side * 0.25;

  CdAr_side = [
    1,   rocketDynamics.A_side;
    2.2, (sys.configParams.main.diameter/2)^2 * pi * sind(50) * 2 / pi ... sind(50) account for a constant large parachute rotation angle while 2/pi accounts for swirl in horizontal plane ($$\frac{1}{2\pi} \int_0^{2\pi} |\cos(\phi)| \, d\phi = \frac{2}{\pi}$$)
  ];

  sys.configParams.rocketMainDescentDrag = DRSS.core.dynamics.SimpleDrag() ...
    .setArea(Ar) ...
    .setCD(1) ...
    .setArea_side(sum(CdAr_side(:, 2))) ...
    .setCD_side(sum(CdAr_side(:,1) .* CdAr_side(:,2)) / sum(CdAr_side(:, 2))) ...
    .setEnabledOnInit(false);
end