function sys = descentDrag(sys)

rocketDynamics = sys.configParams.rocketDynamics;
rocketDynamics.recalcTransientParameters(sys);

% reference area for vertical drag calculations
Ar_main = rocketDynamics.A * 0.75 + rocketDynamics.A_side * 0.25; % expose 25% of side
CDr_drogue = (1.42 * 1.41 * rocketDynamics.aerodynamicProfile.A_fin + 0.56 * (rocketDynamics.A_side)) / rocketDynamics.A;

CdAr_side_drogue = [
  1,   rocketDynamics.A_side;
  2.2, (sys.configParams.drogue.diameter/2)^2 * pi * sind(40) * 2 / pi ... sind(40) account for a constant large parachute rotation angle while 2/pi accounts for swirl in horizontal plane ($$\frac{1}{2\pi} \int_0^{2\pi} |\cos(\phi)| \, d\phi = \frac{2}{\pi}$$)
];
CdAr_side_main = [
  1,   rocketDynamics.A_side;
  2.2, (sys.configParams.main.diameter/2)^2 * pi * sind(35) * 2 / pi ... sind(35) account for a constant large parachute rotation angle while 2/pi accounts for swirl in horizontal plane ($$\frac{1}{2\pi} \int_0^{2\pi} |\cos(\phi)| \, d\phi = \frac{2}{\pi}$$)
];

sys.configParams.rocketDrogueDescentDrag = DRSS.core.dynamics.SimpleDrag() ...
  .setArea(rocketDynamics.A) ...
  .setCD(CDr_drogue) ...
  .setArea_side(sum(CdAr_side_drogue(:, 2))) ...
  .setCD_side(sum(CdAr_side_drogue(:,1) .* CdAr_side_drogue(:,2)) / sum(CdAr_side_drogue(:, 2))) ...
  .setEnabledOnInit(false);

sys.configParams.rocketMainDescentDrag = DRSS.core.dynamics.SimpleDrag() ...
  .setArea(Ar_main) ...
  .setCD(0.5) ...
  .setArea_side(sum(CdAr_side_main(:, 2))) ...
  .setCD_side(sum(CdAr_side_main(:,1) .* CdAr_side_main(:,2)) / sum(CdAr_side_main(:, 2))) ...
  .setEnabledOnInit(false);